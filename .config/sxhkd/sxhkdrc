#
# wm independent hotkeys
#

# terminal emulator
super + Return
	alacritty

super + shift + Return 
  alacritty --class 'Alacritty-Floating'

# program launcher
super + @space
  rofi -show drun

control + shift + h
  rofi -modi "clipboard:greenclip print" -show clipboard -run-command '{cmd}'

control + alt + x
  ~/.local/bin/scripts/powermenu.sh &

control + alt + r
  alacritty -e /usr/bin/ranger

control + alt + l
  betterlockscreen --lock

super + shift + {f,w}
	{thunar,google-chrome-stable}

control + alt + Tab
  bspc desktop -f next.occupied

control + alt + shift + Tab
  bspc desktop -f prev.occupied



# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

# printscreen
@Print
  flameshot gui

shift + @Print
  flameshot gui d 3000

control + @Print
  flameshot gui d 5000

# brightness keys
XF86MonBrightnessUp
  light -A 5 ; dunstify "Brightness: $(light -G | cut -d '.' -f1)%" -I ~/.local/bin/themes/brightness.svg -a volume -h string:x-dunst-stack-tag:brightness -u low

XF86MonBrightnessDown
  light -U 5 ; dunstify "Brightness: $(light -G | cut -d '.' -f1)%" -I ~/.local/bin/themes/brightness.svg -a volume -h string:x-dunst-stack-tag:brightness -u low

XF86Audio{Raise,Lower}Volume  
  pulsemixer --change-volume {+,-}5 ; dunstify "Volume: $(pulsemixer --get-volume | cut -d' ' -f1)%" -I ~/.local/bin/themes/volume.svg -a volume -h string:x-dunst-stack-tag:obvolume -u low
 
XF86AudioMute  
  pulsemixer  --toggle-mute ; dunstify "Volume: $(if [ ! $(pulsemixer --get-mute) = 0 ]; then echo 'Muted'; else echo $(pulsemixer --get-volume | cut -d' ' -f1)%; fi)" -I ~/.local/bin/themes/volume.svg -a volume -h string:x-dunst-stack-tag:obvolume -u low

#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + {q,r}
	bspc {quit,wm -r}

# close and kill
super + {_,shift + }c
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
super + g
	bspc node -s biggest.window

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
# super + {_,shift + }c
# 	bspc node -f {next,prev}.local.!hidden.window

# Change focus to next window, including floating window
alt + {_,shift + }Tab
	bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}
